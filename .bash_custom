#!/bin/bash

[[ $__BASH_CUSTOM__ ]] && echo "DOUBLE SOURCING .bash_custom, ABORTING" \
    && return 1
__BASH_CUSTOM__=true

# useful global-wide functions
source ~/.bash_functions

##################
# HERE BE SETTINGS

# color settings for prompt
COLOR_HOST=${_c[bold_green]}
COLOR_LOW=${_c[bold_yellow]}
COLOR_PWD=${_c[green]}

export HISTSIZE= HISTFILESIZE=           # unlimited history
export HISTCONTROL=ignoredups:erasedups  # no duplicate entries
shopt -s histappend                      # append to history, don't overwrite it

SHOW_GIT_STATUS_IN_PROMPT=true
USE_SAFERM=true

# exports and aliases
export EDITOR=vim

alias ls='ls -F --color'
alias grep='grep --color -E'
alias Grep='grep --color -E'
alias gerp='grep --color -E'
alias sudo='sudo '
alias tmux='tmux -2'

# END OF SETTINGS
#################


export TERM=xterm-256color

# prompt magic + save and reload the history after each command finishes
export PROMPT_COMMAND='RET=$?; history -a; history -c; history -r;'

RET_VALUE='$(echo $RET)'
RET_SMILEY='$(if [[ $RET = 0 ]]; then /bin/echo -en "\[${_c[bold_green]}\]:)\[${_c[reset]}\]"; else /bin/echo -en "\[${_c[bold_red]}\]:(\[${_c[reset]}\]"; fi)'
FAIL_COLOR='$(if [[ $RET != 0 ]]; then /bin/echo -en "\[${_c[bold_red]}\]"; fi)'

# 0 - clean
# 1 - modified, not indexed
# 2 - modified, indexed (ready to commit)
# N+10 - N + untracked
__git_st_c[0]=${COLOR_PWD}
__git_st_c[1]=${_c[bold_red]}
__git_st_c[2]=${_c[bold_green]}
__git_st_c[10]=${_c[bold_yellow]}
__git_st_c[11]=${_c[red]}
__git_st_c[12]=${_c[green]}

function __git_st() {
  local ret
  ret=0;
  local out
  out=$(git status --porcelain 2>/dev/null)
  echo "$out" | grep "^. " &>/dev/null && ret=2
  echo "$out" | grep "^ ." &>/dev/null && ret=1
  echo "$out" | grep -P '^\?\?' &>/dev/null && ret=$(($ret+10))
  echo $ret
}

# comment out following line to disable showing git branch

[[ ${SHOW_GIT_STATUS_IN_PROMPT} == true ]] && \
	__git_ps1='$(branch=`git branch --no-color 2>/dev/null | grep "\*" | sed "s/\* \(.*\)/\1/"`; if [ ! -z "$branch" ]; then c=${__git_st_c[$(__git_st)]}; /bin/echo -ne "\[${COLOR_PWD}\][\[$c\]$branch\[${COLOR_PWD}\]] "; fi)'

export PS1="${__c[white]}${FAIL_COLOR}\t\[${COLOR_LOW}\]|\[${COLOR_HOST}\]\h\[${COLOR_LOW}\]]: \[${COLOR_PWD}\]\w ${__git_ps1}$RET_SMILEY${__c[bold_red]} \\$ ${__c[reset]}"
[[ ${USE_SAFERM} == true ]] && alias rm='_saferm -o '

source ~/.bash_local 2>/dev/null

true
